<#
.DESCRIPTION
    This script creates a c:\temp\capture folder if it doesn't exist and then starts a Process Monitor capture with the appropriate parameters

        ProcMon parameters
        Start capturing
        Save .PML to c:\temp\capture
.PARAMETER <Parameter_Name>
N/A
.INPUTS
N/A
.OUTPUTS
    .PML files saved to c:\temp\capture
.NOTES
    Version:        1.0
    Author:         Daniel Ratliff
    Creation Date:  Thursday, March 21st 2024, 5:11:59 pm
    File: Start-ProcMonCapture.ps1
    Copyright (c) 2024 Humana Inc.
HISTORY:
Date      	          By	Comments
----------	          ---	----------------------------------------------------------

.LINK
    https://expertonsomething.com/2018/02/12/circular-logging-with-process-monitor/
    https://guyrleech.wordpress.com/2018/10/01/dynamically-creating-process-monitor-filters/
    https://www.controlup.com/script-library-posts/run-procmon-and-sample-file-access/
.COMPONENT
    Sysinternals Suite (Store version) must be installed
.EXAMPLE
    .\Start-ProcMonCapture.ps1
#>

if (Get-AppxPackage -AllUsers -Name Microsoft.SysinternalsSuite) {
    $ProcmonPath = (Get-AppxPackage -AllUsers Microsoft.SysinternalsSuite).InstallLocation
    Set-Location "$ProcmonPath\Tools"
    if (Get-Process -Name Procmon -ErrorAction SilentlyContinue) { # check if ProcMon.exe is running and terminate it cleanly to start a fresh capture
        Write-Output 'Terminating Procmon cleanly...'
        & procmon.exe /AcceptEula /Terminate /Quiet
        # Using stop-process KILLS the capture and corrupts the .PML file. It cannot be used. 
    } else {
        Write-Output 'Procmon not running!'
    }

    if (!(Test-Path c:\temp\capture\GenesysCloudFilter.pmc)) {
        Write-Output 'PMC file missing. Generating PMC file on the fly...'
        $pmcFile = 'C:\temp\capture\GenesysCloudFilter.pmc'
        [string]$ProcMonFilter = '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'
        [byte[]]$filter = [System.Convert]::FromBase64String( $procmonFilter )
        $fileStream = New-Object System.IO.FileStream($pmcFile, [System.IO.FileMode]'Create', [System.IO.FileAccess]'Write')
        $fileStream.Write($filter,0,$filter.Count)
        $fileStream.Close()
    }

        Write-Output 'Starting new Procmon instance...'
        Start-Process -FilePath procmon.exe -ArgumentList "/AcceptEula /Quiet /Minimized /BackingFile `"c:\temp\capture\$env:computername-GenesysCloud-$(Get-Date -Format FileDateTime).PML`" /LoadConfig c:\temp\capture\GenesysCloudFilter.pmc"
} else {
    Write-Warning "Procmon not installed, exiting!"
}